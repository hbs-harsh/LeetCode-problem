// Last updated: 7/24/2025, 2:49:28 PM
class Solution {
public:
bool dfs(int node,int color,vector<int>&colors,vector<vector<int>>&graph){
    colors[node]=color;

    for(auto nbr: graph[node]){
        if(colors[nbr]==-1){
           if( dfs(nbr,1-color,colors,graph)==false) return false;
        }else{
            if(colors[node]==colors[nbr]){
                return false;
            }
        }
    }
    return true;
}
    bool isBipartite(vector<vector<int>>& graph) {
        int V=graph.size();

        vector<int>colors(V,-1);

        for(int i=0;i<colors.size();i++){
            if(colors[i]==-1){
              if( dfs(i,0,colors,graph)==false) return false;
            }
        }
        return true;
    }
};